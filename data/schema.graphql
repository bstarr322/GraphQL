type Business {
  id: ID!
  name: String
  image: String
}

type CollectionTree {
  id: ID!
  title: String
  parentNodeId: String
  contentCount: Int
  image: String
  childrenNodes: [CollectionTree]
}

type Content {
  id: ID!
  name: String
  type: String
  typeId: String
}

input ContentInput {
  contentId: String
}

input CreateGoalInput {
  input: GoalInput
  goalType: String
  clientMutationId: String
}

type CreateGoalPayload {
  result: String
  clientMutationId: String
}

input DeleteGoalInput {
  input: Int
  clientMutationId: String
}

type DeleteGoalPayload {
  output: String
  clientMutationId: String
}

input GoalInput {
  name: String
  goalType: GoalTypeInput
  description: String
  businessId: String
  isBusinessCritical: Boolean
  isSequential: Boolean
  startDate: String
  tasks: [TaskInput]
  teams: [TeamInput]
}

type GoalType {
  id: ID!
  name: String
  iconReference: String
  tag: String
}

input GoalTypeInput {
  id: Int
}

type Industry {
  id: ID!
  name: String
}

type Mutation {
  createGoal(input: CreateGoalInput!): CreateGoalPayload
  updateGoal(input: UpdateGoalInput!): UpdateGoalPayload
  deleteGoal(input: DeleteGoalInput!): DeleteGoalPayload
}

type Query {
  viewer(viewerId: Int): Viewer
}

input TaskInput {
  taskType: TaskTypeInput
  instruction: String
  order: Int
  daysToComplete: Int
  content: ContentInput
}

type TaskType {
  id: ID!
  name: String
  tag: String
}

input TaskTypeInput {
  id: Int
}

input TeamInput {
  id: String
  users: [UserInput]
}

type TeamTree {
  id: ID!
  title: String
  parentNodeId: String
  childrenNodes: [TeamTree]
}

input UpdateGoalInput {
  input: GoalInput
  id: Int
  clientMutationId: String
}

type UpdateGoalPayload {
  id: ID!
  name: String
  description: String
  businessId: String
  isBusinessCritical: Boolean
  isSequential: Boolean
  startDate: String
  clientMutationId: String
}

input UserInput {
  id: String
}

# Logged In User
type Viewer {
  viewerId: String
  name: String
  goalTypes: [GoalType]
  goalTypeById(goalTypeId: Int): GoalType
  goalTypeByTag(tag: String): GoalType
  taskTypes: [TaskType]
  taskType(taskTypeId: Int): TaskType
  taskTypeByTag(tag: String): TaskType
  teamsByBusinessId(businessId: String): TeamTree
  contentsByBusinessId(businessId: String, after: String, first: Int, before: String, last: Int): [Content]
  collectionsByBusinessId(businessId: String): [CollectionTree]
  businesses: [Business]
  industriesByBusinessId(businessId: String): [Industry]
}
